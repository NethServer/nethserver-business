#!/usr/bin/perl

#
# Copyright (C) 2020 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

use strict;
use esmith::ConfigDB;
use esmith::event;
use JSON;

require '/usr/libexec/nethserver/api/lib/helper_functions.pl';

my $eventName = undef;
my $ret;
my $exitCode = 0;

my $db = esmith::ConfigDB->open();

my $input = readInput();
my %props = ();
    
if ($input->{'action'} eq 'conf-db') {

    # force default Business Cube databases 
    %props = (
      'ArcprocDB' => 'Arcproc',
      'CompanyDB' => 'Prova'
    );
    $db->get('business')->merge_props(%props);
    $eventName = "nethserver-business-conf-db";
    
} elsif ($input->{'action'} eq 'conf-folder') {
    
    %props = (
      'SharedFolder' => $input->{'folder'}->{'SharedFolder'}
    );
    $db->get('business')->merge_props(%props);
    $eventName = "nethserver-business-update";
    
} elsif ($input->{'action'} eq 'fix-perm') {
    
    my $folder = $db->get_prop('business', 'SharedFolder') || undef;
    my $out = system("/usr/bin/chmod -R 766 /var/lib/nethserver/ibay/$folder/Agg/Setup/ /var/lib/nethserver/ibay/$folder/Agg/Sbc/");
    if ($? == 0) {
      $ret = {'state' => 'success'};
    } else {
      $ret = {'state' => 'error'};
      $exitCode = 1;
    }
    
} else {
    error();
}

esmith::event::set_json_log(1);

if ($eventName) {
  if (esmith::event::event_signal($eventName)) {
      $ret = {'state' => 'success'};
  } else {
      $ret = {
          'type' => 'Error',
          'message' => 'business.api_update_failed',
          'attributes' => {
              'event_name' => $eventName
          }
      };
      $exitCode = 1;
  }
}

print encode_json($ret);
exit($exitCode);