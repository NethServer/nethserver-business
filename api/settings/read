#!/usr/bin/perl

#
# Copyright (C) 2020 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

use strict;
use warnings;
use esmith::ConfigDB;
use JSON;

require '/usr/libexec/nethserver/api/lib/helper_functions.pl';

my $input = readInput();
my $cmd = $input->{'action'};

my $ret = {};

if ($cmd eq 'configuration') {
  
  my $out = `rpm -q --quiet nethserver-mssql mssql-server nethserver-samba`;
  
  if ($? == 0) {
    
    $ret->{'configuration'}{'installed'} = 1;
        
    $out = `systemctl is-active mssql-server`;
    
    if ($? == 0) {
      $out = `systemctl is-active smb`;
      $ret->{'configuration'}{'isrunning'} = ($? == 0)? 1 : 0;
    } else {
      $ret->{'configuration'}{'isrunning'} = 0;
    }
    
    my $db = esmith::ConfigDB->open_ro();
  
    my $folder = $db->get_prop('business', 'SharedFolder') || undef;
    $ret->{'configuration'}{'SharedFolder'} = $folder;
    $ret->{'configuration'}{'SharedFolderStatus'} = (-d "/var/lib/nethserver/ibay/$folder/") && ($folder ne '') ? JSON::true : JSON::false;
    
    my $arcproc = $db->get_prop('business', 'ArcprocDB') || 'Arcproc';
    $ret->{'configuration'}{'ArcprocDB'} = $arcproc;
    $ret->{'configuration'}{'ArcprocDBStatus'} = (-e "/var/opt/mssql/data/$arcproc.mdf") ? JSON::true : JSON::false;
    
    my $companydb = $db->get_prop('business', 'CompanyDB') || 'Prova';
    $ret->{'configuration'}{'CompanyDB'} = $companydb;
    $ret->{'configuration'}{'CompanyDBStatus'} = (-e "/var/opt/mssql/data/$companydb.mdf") ? JSON::true : JSON::false;
    
  } else {
    $ret->{'configuration'}{'installed'} = 0;
  }
  
} else {
    error();
}

print encode_json($ret);